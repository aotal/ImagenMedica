{
  "hash": "159cff58955f66101070750ef38a8a61",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Procesamiento de prospectos\"\ndate: \"2024-02-25\"\ncategories: [Presentación]\nimage: img/imagen_ejemplo_datos.jpg\nauthor: \"[Antonio Otal Palacín](antonio.otal@udl.cat)\"\ninstitute: Hospital Universitari Arnau de Vilanova (Lleida)\nlang: es\nformat: \n    revealjs:\n        logo: 'https://cdn0.iconfinder.com/data/icons/modern-ui-glyph-1/64/modern-ui-glyph-1-03-512.png'\n        footer-logo-link: \"./ImagenMedica/\"\n        footer: \"[IAMED](https://cv.udl.cat/portal/site/100794-2324/tool/3d5c2c81-a50b-43ce-a0bf-ecbfd152350b)\"\n        css: styles.css\n        number-sections: false\n        slide-number: false\n        center: false\n        smaller: true\nfilters:\n  - reveal-header        \njupyter: python3   \n---\n\n\n## Índice\n\n- Planteamiento del problema\n- Extracción de datos\n- *UNSTRUCTURED TO STRUCTURED*\n- DB vectorial: Pinecone\n- DB grafos: Neo4j Aura\n\n::: notes\nNotes\n:::\n\n# Planteamiento del problema\n\n## Página CIMA\n\n[![](https://www.aemps.gob.es/assets/logo/apps/cima.jpg){width=300px}](https://cima.aemps.es/cima/publico/home.html#)\n\n::: notes\nNotes\n:::\n\n## ¿Qué es una API?\n\n*   **API** son las siglas de **Application Programming Interface** (Interfaz de Programación de Aplicaciones).\n*   Es un conjunto de reglas y especificaciones que permiten que diferentes aplicaciones de software se comuniquen e intercambien datos entre sí.\n*   Las APIs actúan como intermediarios, facilitando la interacción entre sistemas que de otro modo serían incompatibles.\n\n::: notes\nNotes\n:::\n\n## ¿Cómo funcionan las APIs?\n\n1.  Una aplicación (el cliente) realiza una solicitud a través de la API a otra aplicación (el servidor).\n2.  El servidor recibe la solicitud, la procesa y envía una respuesta con los datos solicitados.\n3.  El cliente recibe la respuesta y puede utilizar los datos para realizar diversas funciones.\n\n**Ejemplo:** Cuando utilizas una aplicación de viajes compartidos, la API de Google Maps se utiliza para mostrar el mapa y calcular la ruta. La API de la aplicación de viajes compartidos se encarga de gestionar las reservas y los pagos.\n\n::: notes\nNotes\n:::\n\n## CIMA REST API\n\n\n```{=html}\n<iframe width=\"1200\" height=\"500\" src=\"https://sede.aemps.gob.es/docs/CIMA-REST-API_1_19.pdf\" title=\"API CIMA\"></iframe>\n```\n\n\n::: notes\nNotes\n:::\n\n# Extracción de datos\n\n## *Promt* para diseño del colab \n\n<blockquote cite='https://gemini.google.com/'>\n\nQuiero que busques un medicamento por nombre, por ejemplo paracetamol utilizando la información contenida en el archivo adjunto. Ten en cuenta que cada búsqueda puede tener varias páginas. Hay un campo llamados totalFilas que indica el número de medicamentos encontrados y otro llamado tamanioPagina que indica el número de medicamentos por página. Me gustaría que almacenases los ids de cada uno en un array. Hazlo mediante una estructura de funciones de python, comentadas y lo más concisas y a su vez que formen una estructura robusta y escalable.\n\n</blockquote>\n\n![](img/gemini_2_Flash.PNG){.absolute top=\"500\" right=\"0\" height=\"75\"}\n\n## Diseño del Colab\n\n<div style=\"text-align: center;\"> [![Diálogo 1 con Gemini](img/gemini-color.png){width=100 style=\"margin-right: 20px;\"}](https://g.co/gemini/share/86cec95f48b6)\n\n<a href=\"https://colab.research.google.com/drive/1R8_QxT-A66iQbkt3rSfW7VGS0q_dqfQ4?usp=sharing\" target=\"_blank\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Código para la extracción de datos\"/></a>\n\n[Búsqueda de paracetamol página 1](https://cima.aemps.es/cima/rest/medicamentos?nombre=paracetamol&pagina=1)\n\n</div>\n\n::: notes\nNotes\n:::\n\n## Primer JSON: Prospectos\n\n[Fichero obtenido](files/prospectos_componentes.json){preview-links=\"true\"}\n\n::: notes\nQuizá recordar que se podrían almacenar en una NoSQL de las de clave-valor. Aunque de poco sirve.\n:::\n\n# *UNSTRUCTURED TO STRUCTURED*\n\n## *Promt* para buscar la estructura \n\n<blockquote cite='https://gemini.google.com/'>\n\nTe he pasado un archivo JSON en el que los campos son los IDs de unos medicamentos y el alor el prospecto de cada uno de los medicamentos. Puedes buscar campos comunes dentro del texto de los prospectos?\n\n</blockquote>\n\n![](img/gemini_2_Flash.PNG){.absolute top=\"500\" right=\"0\" height=\"75\"}\n\n## *Promt* para buscar la estructura \n\n<blockquote cite='https://gemini.google.com/'>\n\nTe he pasado un archivo JSON en el que los campos son los IDs de unos medicamentos y el alor el prospecto de cada uno de los medicamentos. Puedes buscar campos comunes dentro del texto de los prospectos?\n\n</blockquote>\n\n![](img/gemini_2_Flash.PNG){.absolute top=\"500\" right=\"0\" height=\"75\"}\n\n## Buscando la estructura\n\n<div style=\"text-align: center;\"> [![Diálogo 2 con Gemini](img/gemini-color.png){width=100 style=\"margin-right: 20px;\"}](https://g.co/gemini/share/7a41dc1e66a3)\n\n[Proyecto baml](https://github.com/codespaces/redesigned-bassoon-xq45pv9vrxfv9jg)\n\n[![Diálogo 3 con Gemini](img/gemini-color.png){width=100 style=\"margin-right: 20px;\"}](https://g.co/gemini/share/f63c3db814a0)\n\n</div>\n\n## *Promt* para definir las clases \n\n<blockquote cite='https://gemini.google.com/'>\n\nTengo una lista de posibles valores:\nComprimidos\nComprimidos efervescentes\nComprimidos gastrorresistentes\nComprimidos recubiertos con película\nCápsulas blandas\nGranulado para solución oral\nSuspensión oral\nSolución oral\nSolución para perfusión\nConcentrado para solución para perfusión\nY una estructura en un lenguage llamado baml:\nenum MyEnum {\n  Value1 @alias(\"complete_summary\") @description(\"Answer in 2 sentences\")\n  Value2\n  Value3 @skip\n  Value4 @description(#\"\n    This is a long description that spans multiple lines.\n    It can be useful for providing more context to the value.\n  \"#)\n}\nPuedes adaptarme la lista a la estructura?\n\n</blockquote>\n\n![](img/gemini_2_Flash.PNG){.absolute top=\"500\" right=\"0\" height=\"75\"}\n\n## Iterando por todos los prospectos\n\n<div style=\"text-align: center;\"> ![Diálogo 4 con Gemini](img/gemini-color.png){width=100 style=\"margin-right: 20px;\"}\n\n<a href=\"https://colab.research.google.com/drive/1URmlyjPGhkIhqV-W896RO4lQ6W4qNFbO?usp=sharing\" target=\"_blank\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Código para la extracción de datos\"/></a>\n\n[Fichero obtenido](files/cytoscape_data.json){preview-links=\"true\"}\n\n</div>\n\n# DB vectorial: Pinecone\n\n::: notes\nNotes\n:::\n\n## Repositorio de github\n\n<div style=\"text-align: center;\"> ![[El enlace al repositorio aquí](https://github.com/aotal/pinecone_upload)](https://1000logos.net/wp-content/uploads/2021/05/GitHub-logo-500x281.png){width=500 style=\"margin-right: 100px;\"}\n</div>\n\n## Pinecone: Base de datos vectorial\n\n::: columns\n::: {.column width=\"50%\"}\n\n* **¿Qué es Pinecone?**\n    * Base de datos vectorial diseñada para aplicaciones de IA.\n    * Optimizado para búsqueda por similitud de alta velocidad.\n    * Almacena y consulta incrustaciones (embeddings).\n\n* **Casos de uso clave:**\n    * Sistemas de recomendación.\n    * Búsqueda semántica.\n    * Chatbots y asistentes virtuales.\n    * Detección de anomalías.\n\n:::\n::: {.column width=\"50%\"}\n\n![](https://mma.prnewswire.com/media/2418074/Pinecone_Systems_Inc_Logo.jpg){.absolute top=\"300\" right=\"50\" height=\"75\"}\n\n:::\n:::\n\n## Características principales de Pinecone\n\n* **Alta velocidad y escalabilidad:**\n    * Índices optimizados para búsqueda de vecinos más cercanos (ANN).\n    * Escalado horizontal para manejar grandes volúmenes de datos.\n\n* **Flexibilidad:**\n    * Soporta diferentes tipos de metricas de distancia (coseno, euclidiana, etc).\n    * Soporta metadatos.\n\n\n## *Promt* para pinecone \n\n<blockquote cite='https://gemini.google.com/'>\n\nQuiero codificar en una base de datos de pinecone el siguiente json que consiste en una lista de tres diccionarios que corresponden a 3 analgesicos. Solamente es una muestra de una lista mucho más grande. La lista es:[...]\nMe gustaría que encontrases la manera más eficiente de codificarla en pinecone como base de una aplicación rag que mediante lenguaje natural haga preguntas y reciba también respuestas en lenguaje natural lo más exactas posibles. Es un proyecto de un chat para médicos que les ayude a encontrar el analgésico más adecuado para un determinado paciente con una determinada dolencia. Por lo tanto, las respuestas deben ser en un lenguaje de experto médico.\n\n</blockquote>\n\n![](img/gemini_2_Pro_exp.PNG){.absolute top=\"500\" right=\"0\" height=\"75\"}\n\n## Adaptando datos a pinecone\n\n<div style=\"text-align: center;\"> [![Diálogo 5 con Gemini](img/gemini-color.png){width=100 style=\"margin-right: 20px;\"}](https://gemini.google.com/)\n\n[Enlace a pinecone](https://app.pinecone.io/organizations/-OJIqDwxUspfeMInRBdg/projects/6a5fa0c7-11c8-465d-862c-9b7ec5199380/get-started/database)\n\n</div>\n\n## *Promt*: Creando el chatbot\n\n<blockquote cite='https://gemini.google.com/'>\n\nEstoy creando una aplicación rag sobre medicamentos analgesicos. El fichero de partida es un json con una estructura de diccionarios como la siguiente:\n[...]\nExisten tres ficheros python. En primer lugar, data_utils.py:\n[...]\nEn segundo lugar transform_json.py:\n[...]\nY por último el fichero que carga los datos en pinecone upload_pinecone.py\n[...]\nTodo esto funciona. A partir de ahora me gustraía crear una aplicación chatbot que al hacerle preguntas en lenguaje natural sobre medicamento respondiese como un experto médico en analgesicos con la información contenida en la base de datos de pinecone recomendando los medicamentos optimos en cada situación.\n\n</blockquote>\n\n![](img/gemini_2_Pro_exp.PNG){.absolute top=\"500\" right=\"0\" height=\"75\"}\n\n\n# DB grafos: Neo4j Aura\n\n\n## Neo4j y Aura\n\n- **Neo4j** es la base de datos de grafos líder en el mundo.\n-  Almacena y consulta datos como nodos y relaciones.\n-  Ideal para datos altamente conectados.\n-  Casos de uso: redes sociales, detección de fraudes, recomendaciones, etc.\n- **Aura** la solución en la nube neo4j.\n\n## ¿Por qué grafos?\n\n- Los datos están conectados. Los grafos permiten modelar estas conexiones de forma natural.\n- Las consultas en grafos son más eficientes para relaciones complejas.\n- Los grafos permiten descubrir patrones ocultos en los datos.\n\n**Ejemplo de código Cypher**\n\n```cypher\nMATCH (usuario:Usuario)-[:SIGUE]->(otroUsuario:Usuario)-[:PUBLICÓ]->(articulo:Articulo)\nWHERE usuario.nombre = 'TuNombre'\nRETURN articulo.titulo\n```\n\n## Creación del la DB de grafos\n\n\n<a href=\"https://colab.research.google.com/drive/1R8_QxT-A66iQbkt3rSfW7VGS0q_dqfQ4?usp=sharing\" target=\"_blank\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Código para la extracción de datos\"/></a>\n\n![](img/cytoscape.png)\n\n[Neo4j](https://console-preview.neo4j.io/projects/fd625893-ecee-4e7d-a6d6-652fd4bfd1e9/instances)\n\n\n::: notes\nNotes\n:::\n\n## Preguntas\n\n- Me duele mucho la cabeza y tengo el estómago delicado, ¿hay algún analgésico que no me lo irrite?\n- Tengo dolor de cabeza y estoy tomando anticoagulantes, ¿hay alguna interacción que deba tener en cuenta?\n- Soy mayor y tengo dolor de articulaciones, ¿qué medicamento es seguro para mí?\n- Tengo dolor menstrual muy fuerte, ¿qué medicamento me puede ayudar?\n- Me duele mucho la cabeza y tengo el estómago delicado, ¿hay algún analgésico que no me lo irrite?\n\n\n\n::: notes\nNotes\n:::\n\n\n# GRACIAS POR VUESTRA ATENCIÓN\n\n",
    "supporting": [
      "Procesamiento_datos_files"
    ],
    "filters": [],
    "includes": {}
  }
}